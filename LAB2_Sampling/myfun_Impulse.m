function [t, p] = myfun_Impulse(t1, t2, N, fs)

ts = 1 / fs; % 0이다가 1의 값을 가지는 한 구간의 주기

s = ( (t2-t1) / ts );  % 전체 구간 길이에서 1의 값을 가지는 구간 Ts의 갯수
b = N / s;  % 임펄스열 전체 구간중 하나의 임펄스열이 나오는 구간내 갯수 즉, 00....1 /00....1
r = ceil(b); % 계산 결과가 변수에따라 다르기 떄문에 정수로 설정하기 위해 ceil()함수를 사용했다
a = ts / r; % 하나의 임펄스 구간내 주기를 위에서 구한 갯수로 나누어 각 점간의 거리를 구했다.

t = zeros(1, N); % 전체 길이의 양만큼 제로벡터 설정
p(1) = 1; % t1+NTs N의 값이 0일때 생각
t(1) = t1; % t1이 처음 시작값

for k = 1:N-1
    t(k+1) = t1 +a*k;
   % t1 + a, t1+2a 즉, 시작부분  t1부터 t2까지 길이를 N으로 나눈만큼의 크기만큼 증가한다.
    
    if(mod(k, r) == 0) % k를 r로 나누었을 떄 0이 나오면 (t1 + nTs) 찾음 
        p(k+1) = 1; % 해당 k번째 값 1
    else
        p(k+1) = 0; % 나머지 값들은 0
    end
end